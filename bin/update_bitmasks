#!/usr/bin/env python

"""
Update doc/bitmasks.rst based upon code descriptions
"""

bitmask_template = """
=================
Bit Masks in DESI
=================

This page links to the URLs defining the bitmasks found in DESI files.
For details on working with these values, please see the tutorial_ on
that topic.

Redshift fitting (Redrock) masks
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The **ZWARN** bitmask in redshift catalogs indicates known problems with a
particular redshift fit or associated QA.
ZWARN==0 is good; any non-zero value indicates a potential problem.
This mask will be described in more detail in the Redrock paper
(Bailey et al 2023 in prep), as well as Section 5.3.1 of the
Survey Operations Paper (Schlafly et al 2023 TODO: add link).

Bits 0-15 are set by Redrock itself (the redshift fitter),
while bits 16-19 are set by DESI-specific post-processing.

{ZWARN}

Spectroscopic reduction masks
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

=================================== ==================
BIT_MASK                            URL
=================================== ==================
QAFIBERSTATUS                       `MASKBITS_L55`_
FIBERSTATUS                         `MASKBITS_L55`_
COADD_FIBERSTATUS                   `MASKBITS_L55`_
MASK                                `MASKBITS_L84`_
=================================== ==================

The **FIBERSTATUS** bit mask is used to track the state of individual
fibers for issues that impact the entire spectrum, e.g. a broken fiber.
It is used in 

================ ============= ===========
File             HDU           Column
================ ============= ===========
`frame`_         FIBERMAP      FIBERSTATUS
`sframe`_        FIBERMAP      FIBERSTATUS
`cframe`_        FIBERMAP      FIBERSTATUS
`spectra`_       FIBERMAP      FIBERSTATUS
`coadd`_         EXP_FIBERMAP  FIBERSTATUS
`coadd`_         FIBERMAP      COADD_FIBERSTATUS
`exposure-qa`_   FIBERQA       QAFIBERSTATUS
`tile-qa`_       FIBERQA       QAFIBERSTATUS
================ ============= ===========

.. _`frame`: DESI_SPECTRO_REDUX/SPECPROD/exposures/NIGHT/EXPID/frame-CAMERA-EXPID.html
.. _`sframe`: DESI_SPECTRO_REDUX/SPECPROD/exposures/NIGHT/EXPID/sframe-CAMERA-EXPID.html
.. _`cframe`: DESI_SPECTRO_REDUX/SPECPROD/exposures/NIGHT/EXPID/cframe-CAMERA-EXPID.html
.. _`spectra`: DESI_SPECTRO_REDUX/SPECPROD/healpix/SURVEY/PROGRAM/PIXGROUP/PIXNUM/spectra-SURVEY-PROGRAM-PIXNUM.html
.. _`coadd`: DESI_SPECTRO_REDUX/SPECPROD/healpix/SURVEY/PROGRAM/PIXGROUP/PIXNUM/coadd-SURVEY-PROGRAM-PIXNUM.html
.. _`exposure-qa`: DESI_SPECTRO_REDUX/SPECPROD/exposures/NIGHT/EXPID/exposure-qa-EXPID.html
.. _`tile-qa`: DESI_SPECTRO_REDUX/SPECPROD/tiles/GROUPTYPE/TILEID/GROUPID/tile-qa-TILEID-GROUPID.html

{FIBERSTATUS}

Target masks
~~~~~~~~~~~~

These masks are described in more detail in Appendix A and B of the
the DESI EDR paper (DESI Collaboration et al 2023 TODO: add link).

=================================== ==================
BIT_MASK                            URL
=================================== ==================
CMX_TARGET                          `CMX`_
SV1_DESI_TARGET                     `SV1`_
SV1_BGS_TARGET                      `SV1`_
SV1_MWS_TARGET                      `SV1`_
SV2_DESI_TARGET                     `SV2`_
SV2_BGS_TARGET                      `SV2`_
SV2_MWS_TARGET                      `SV2`_
SV2_SCND_TARGET                     `SV2`_
SV3_DESI_TARGET                     `SV3`_
SV3_BGS_TARGET                      `SV3`_
SV3_MWS_TARGET                      `SV3`_
SV3_SCND_TARGET                     `SV3`_
DESI_TARGET                         `TARGET`_
BGS_TARGET                          `TARGET`_
MWS_TARGET                          `TARGET`_
SCND_TARGET                         `TARGET`_
OBSCONDITIONS                       `TARGET_L188`_
=================================== ==================


Imaging masks
~~~~~~~~~~~~~

These masks were defined or used by the `DESI Legacy Imaging Surveys`_. Please
see their information on these masks at the links below.

=================================== ==================
BIT_MASK                            URL
=================================== ==================
WISEMASK_W1                         `BITMASKS_LEGACY`_
WISEMASK_W2                         `BITMASKS_LEGACY`_
MASKBITS                            `BITMASKS_LEGACY`_
=================================== ==================


.. _`CMX`: https://github.com/desihub/desitarget/blob/2.5.0/py/desitarget/cmx/data/cmx_targetmask.yaml
.. _`SV1`: https://github.com/desihub/desitarget/blob/2.5.0/py/desitarget/sv1/data/sv1_targetmask.yaml
.. _`SV2`: https://github.com/desihub/desitarget/blob/2.5.0/py/desitarget/sv2/data/sv2_targetmask.yaml
.. _`SV3`: https://github.com/desihub/desitarget/blob/2.5.0/py/desitarget/sv3/data/sv3_targetmask.yaml
.. _`TARGET`: https://github.com/desihub/desitarget/blob/2.5.0/py/desitarget/data/targetmask.yaml
.. _`MASKBITS_L55`: https://github.com/desihub/desispec/blob/0.55.0/py/desispec/maskbits.py#L55
.. _`TARGET_L188`: https://github.com/desihub/desitarget/blob/2.5.0/py/desitarget/data/targetmask.yaml#L188
.. _`MASKBITS_L84`: https://github.com/desihub/desispec/blob/0.55.0/py/desispec/maskbits.py#L84
.. _`ZWARN`: https://github.com/desihub/redrock/blob/0.16.0/py/redrock/zwarning.py#L14
.. _`BITMASKS_LEGACY`: https://www.legacysurvey.org/dr9/bitmasks/
.. _`DESI Legacy Imaging Surveys`: https://www.legacysurvey.org/
.. _tutorial: https://github.com/desihub/desitarget/blob/master/doc/nb/target-selection-bits-and-bitmasks.ipynb
"""

#-------------------------------------------------------------------------
#- ZWARN mask from desitarget is a superset of the bits defined in Redrock
from desitarget.targetmask import zwarn_mask

ZWARN_rows = list()
for name in zwarn_mask.names():
    bitnum = zwarn_mask.bitnum(name)
    comment = zwarn_mask.comment(name)
    ZWARN_rows.append(f'{name:20s} {bitnum:10d} {comment}')

ZWARN_rows = '\n'.join(ZWARN_rows)
ZWARN = f"""**ZWARN Bit Definitions**

==================== ========== ===========
Bit Name             Bit Number Description
==================== ========== ===========
{ZWARN_rows}
==================== ========== ===========
"""

#-------------------------------------------------------------------------
#- FIBERSTATUS
from desispec.maskbits import fibermask

FIBERSTATUS_rows = list()
for name in fibermask.names():
    bitnum = fibermask.bitnum(name)
    comment = fibermask.comment(name)
    FIBERSTATUS_rows.append(f'{name:20s} {bitnum:10d} {comment}')

FIBERSTATUS_rows = '\n'.join(FIBERSTATUS_rows)
FIBERSTATUS = f"""**FIBERSTATUS Bit Definitions**

==================== ========== ===========
Bit Name             Bit Number Description
==================== ========== ===========
{FIBERSTATUS_rows}
==================== ========== ===========
"""

#-------------------------------------------------------------------------
    
    
print(bitmask_template.format(
        ZWARN=ZWARN,
        FIBERSTATUS=FIBERSTATUS,
        ))
