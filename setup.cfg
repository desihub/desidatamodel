[metadata]
name = desidatamodel
version = attr: desidatamodel.__version__
author = DESI Collaboration
author_email = desi-data@desi.lbl.gov
license = BSD 3-Clause License
license_files = LICENSE.rst
url = https://github.com/desihub/desidatamodel
description = DESI data transfer infrastructure.
long_description = file: README.rst
long_description_content_type = text/x-rst
edit_on_github = True
github_project = desihub/desidatamodel
classifiers =
    Development Status :: 5 - Production/Stable
    Environment :: Console
    Framework :: Sphinx
    Intended Audience :: Science/Research
    License :: OSI Approved :: BSD License
    Natural Language :: English
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Topic :: Documentation :: Sphinx
    Topic :: Scientific/Engineering :: Astronomy

[options]
zip_safe = True
package_dir =
    =py
packages = find:
include_package_data = True
python_requires = >=3.9
# setup_requires = setuptools_scm
install_requires =
    astropy
    jinja2
scripts =
    bin/check_minitest.sh
    bin/check_model
    bin/deep_scan_metadata
    bin/generate_model
    bin/update_bitmasks
    bin/update_column_descriptions

# [options.entry_points]
# console_scripts =
#     check_model = desidatamodel.check:main
#     deep_scan_metadata = desidatamodel.scan:main
#     generate_model = desidatamodel.stub:main
#     update_column_descriptions = desidatamodel.update:main

[options.extras_require]
test =
    pytest
coverage =
    pytest-cov
    coveralls
doc =
    Sphinx
    sphinx-rtd-theme>1.2
    sphinx-toolbox

[options.package_data]
desidatamodel = data/*
desidatamodel.test = t/*

[options.packages.find]
where = py
exclude = .github/*

[coverage:run]
relative_files = True
source =
    py/desidatamodel
omit =
    py/desidatamodel/_version.py
    py/desidatamodel/conftest*
    py/desidatamodel/test/*
    */desidatamodel/_version.py
    */desidatamodel/conftest*
    */desidatamodel/test/*

# [coverage:paths]
# source =
#     py/desidatamodel/
#     */site-packages/desidatamodel/

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_

[pycodestyle]
# See https://pycodestyle.readthedocs.io/en/latest/intro.html#configuration
# for details of these configuration options.
#
# These are normally ignored by default:
# ignore = E121, E123, E126, E133, E226, E241, E242, E704, W503, W504
#
# These are the explicitly ignored styles:
#
# - E126: continuation line over-indented for hanging indent
# - E226: missing whitespace around arithmetic operator
# - E241: multiple spaces after ','
# - W504: line break after binary operator
#
# In addition:
# - E501: not ignored, but 180 will eventually be reduced.
max-line-length = 180
ignore = E126,E226,E241,W504
